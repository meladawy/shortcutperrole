<?php

/**
 * @file
 * Allows users to manage customizable lists of shortcut links.
 */

/**
 * Implements hook_permission().
 */
function shortcut_per_role_permission() {
  return array(
    'administer shortcut per role' => array(
      'title' => t('Administer Shortcuts per Role'),
    ),
  );
}

/**
 * Implement hook_help().
 */
function shortcut_per_role_help($path, $arg) {
  switch ($path) {
    case 'admin/help#shortcut_per_role':
  $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Assign the default shortcut set per role') .  '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function shortcut_per_role_menu() {
  $items['admin/config/user-interface/shortcut-per-role'] = array(
    'title' => 'Shortcuts Per Role',
    'description' => 'Add and modify shortcut sets per role',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shortcut_per_role_admin_form'),
    'access arguments' => array('administer shortcut per role'),
    'file' => 'shortcut_per_role.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_shortcut_default_set()
 */
function shortcut_per_role_default_set($account) {
  //determine the  role of user according to the rank & assign the shortcut set...
  $role_highest_name = db_query('SELECT name FROM {role} WHERE rid IN(' . implode(',', array_keys($account->roles)) . ') ORDER BY weight DESC ')->fetchField();
  $role_highest_name = str_replace(' ', '_', $role_highest);
  return variable_get('shorcut_per_role_' . $role_highest_name . '_set', 'shortcut-set-1');
}

// @TODO: Update the variable name when role name is updated
// @TODO: Delete the variable when a role is deleted

