<?php

/**
 * @file
 * Allows users to manage customizable lists of shortcut links.
 */

/**
 * Implements hook_permission().
 */
function shortcut_per_role_permission() {
  return array(
    'administer shortcut per role' => array(
      'title' => t('Administer shortcuts per role'),
    ),
  );
}

/**
 * Implement hook_help().
 */
function shortcut_per_role_help($path, $arg) {
  switch ($path) {
    case 'admin/help#shortcut_per_role':
      //return l(t('Settings'), 'admin/config/user-interface/shortcut-per-role');
      break;
  }
}

/**
 * Implements hook_menu().
 */
function shortcut_per_role_menu() {
  $items['admin/config/user-interface/shortcut-per-role'] = array(
    'title' => 'Shortcuts Per Role',
    'description' => 'Add and modify shortcut sets per role',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shortcut_per_role_admin_form'),
    'access arguments' => array('administer shortcut per role'),
    'file' => 'shortcut_per_role.admin.inc',
  );

  return $items;
}
/**
 * Implements hook_shortcut_default_set()
 */
function shortcut_per_role_default_set($account) {
  //determine the  role of user according to the rank & assign the shortcut set...
  $role_highest_name = db_query('SELECT name FROM {role} WHERE rid IN(' . implode(',', array_keys($user->roles)) . ') ORDER BY weight DESC ')->fetchField();
  $role_highest_name = str_replace(' ', '_', $role_highest);
  return variable_get('shorcut_per_role_' . $role_highest_name . '_set', $default = 'shortcut-set-1');
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Handles Shortcut per  role association delete when role is deleted from system.
 *
 * @see shortcut_per_role_form_user_admin_role_submit_alter()
 */
function shortcut_per_role_form_user_admin_role_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'shortcut_per_role_submit_alter';
}

/**
 * Role delete callback.
 *
 * Handles shortcut_per_role role association delete when role is deleted from system
 *
 * @see shortcut_per_role_form_user_admin_role_alter()
 */
function shortcut_per_role_user_admin_role_submit_alter($form, &$form_state) {
  if ($form_state['values']['op'] == t('Delete role')) {
   // $role_name = str_replace(' ', '_', $form_state['values']['name']);
    variable_del('shorcut_per_role_' . $role_name . '_set');
  }
}
